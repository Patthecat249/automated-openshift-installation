---
- name: "### --- 14 - Check if dnsmasq.conf is backed up"
  stat:
    path: "/etc/dnsmasq.conf.backup"
  register: dnsmasq_conf_backup_details

- name: "### --- 15 - Backup dnsmasq.conf if not already done"
  copy:
    src: "/etc/dnsmasq.conf"
    dest: "/etc/dnsmasq.conf.backup"
    mode: "0644"
    remote_src: yes
  when: not dnsmasq_conf_backup_details.stat.exists

- name: "### --- 16 - Render dnsmasq.conf from template"
  template:
    src: "../99-jinja-templates/dnsmasq/dnsmasq.conf.j2"
    dest: "/etc/dnsmasq.conf"
    owner: "root"
    group: "root"
    mode: "0644"
    force: yes
    validate: "dnsmasq --test -C %s"
  notify: 
    - restart dnsmasq

# 21.09.2020 - New Feature to backup the dnsmasq.conf-file
- name: "### --- 17 - Backup dnsmasq.conf to /opt/sva/backup"
  copy:
    src: "/etc/dnsmasq.conf"
    dest: "{{ dir_backup_dnsmasq }}dnsmasq.conf"
    remote_src: yes

# Setup SELinux for tftproot-Folder so that dnsmasq works with SELinux
#- name: "17a - setsebool -P tftp_anon_write 1"
#  raw: "setsebool -P tftp_anon_write 1"

- name: "17a - Set SELinux boolean tftp_anon_write to true"
  seboolean: 
    name: "tftp_anon_write"
    state: "true"
    persistent: "true"

#- name: "17b - setsebool -P tftp_home_dir 1"
#  raw: "setsebool -P tftp_home_dir 1"
- name: "17b - Set SELinux boolean tftp_home_dir to true"
  seboolean: 
    name: "tftp_home_dir"
    state: "true"
    persistent: "true"

#- name: "17c - semanage fcontext -a -t tftpdir_t '/{{dir_tftp_root}}(/.*)?'"
#  raw: "semanage fcontext -a -t tftpdir_t '{{dir_tftp_root}}(/.*)?'"

- name: "17c - semanage fcontext -a -t tftpdir_t '/{{dir_tftp_root}}(/.*)?'"
  sefcontext: 
    target: "{{dir_tftp_root}}(/.*)?"
    setype: "tftpdir_t"
    state: "present"


- name: "17d - restorecon -Rv {{dir_tftp_root}}"
  raw: "restorecon -Rv {{dir_tftp_root}}"



- name: "### --- 18 - Ensure dnsmasq is running"
  systemd: 
    name: dnsmasq
    state: started
    enabled: yes

- name: "### --- 19 - Add DNS server and search domain"
  shell: |
    nmcli con mod {{interface}} +ipv4.dns-search "{{ clustername }}.{{ domain }}"
    nmcli con mod {{interface}} +ipv4.dns "{{ bastion.ip }}"
    nmcli connection up {{interface}} 
