# # Install-VM
# - import_playbook: "../00-install-and-configure-installation-vm/01-playbook-configure-install-vm.yaml"

# # Router-VM
# - import_playbook: "../00-install-and-configure-router-vm/01-playbook-install-router-vm.yaml"
# - name: "Wait for {{ router.hostname }} ({{ router.ip }}) to become available"
#   gather_facts: "false"
#   vars_files:
#     - "../vars/vars.yaml"
#   hosts: "127.0.0.1"
#   tasks:
#     - name: "Check if Port: 22 is open at {{ router.ip }} - check every 10 seconds"
#       wait_for:
#         host: "{{ router.ip }}"
#         delay: 10
#         timeout: 300
#         port: 22
# - import_playbook: "../00-install-and-configure-router-vm/02-playbook-configure-router-vm.yaml"

# # Bastion-VM
# - import_playbook: "../01-install-and-configure-bastion-host-vm/01-playbook-install-bastion-vm.yaml"
# - name: "Wait for {{ bastion.hostname }} ({{ bastion.ip }}) to become available"
#   gather_facts: "false"
#   vars_files:
#     - "../vars/vars.yaml"
#   hosts: "127.0.0.1"
#   tasks:
#     - name: "Check if Port: 22 is open at {{ bastion.ip }} - check every 10 seconds"
#       wait_for:
#         host: "{{ bastion.ip }}"
#         delay: 10
#         timeout: 300
#         port: 22
# - import_playbook: "../01-install-and-configure-bastion-host-vm/02-playbook-configure-bastion-vm.yaml"

# # Load-Balancer
# - import_playbook: "../03-install-and-configure-load-balancer-vm/01-playbook-install-lb-vm.yaml"
# - name: "Wait for {{ lb.hostname }} ({{ lb.ip }}) to become available"
#   gather_facts: "false"
#   vars_files:
#     - "../vars/vars.yaml"
#   hosts: "127.0.0.1"
#   tasks:
#     - name: "Check if Port: 22 is open at {{ lb.ip }} - check every 10 seconds"
#       wait_for:
#         host: "{{ lb.ip }}"
#         delay: 10
#         timeout: 300
#         port: 22
# - import_playbook: "../03-install-and-configure-load-balancer-vm/02-playbook-configure-load-balancer-vm.yaml"


# # Registry-VM
# - import_playbook: "../02-install-and-configure-image-registry-vm/01-playbook-install-registry-vm.yaml"

# - name: "Wait for {{ registry.hostname }} ({{ registry.ip }}) to become available"
#   gather_facts: "false"
#   vars_files:
#     - "../vars/vars.yaml"
#   hosts: "127.0.0.1"
#   tasks:
#     - name: "Check if Port: 22 is open at {{ registry.ip }} - check every 10 seconds"
#       wait_for:
#         host: "{{ registry.ip }}"
#         delay: 10
#         timeout: 300
#         port: 22

# - import_playbook: "../02-install-and-configure-image-registry-vm/02-playbook-configure-registry-vm.yaml"
# - import_playbook: "../02-install-and-configure-image-registry-vm/03-playbook-mirror-the-registry.yaml"




# It's possible to recreate cluster from here
# On Bastion-Host
# vi /etc/dhcp/dhcpd.conf                                               # remove host-entries from 
# systemctl restart dhcpd                                               # restart dhcpd
# rm -f /tftproot/pxelinux.cfg/*                                        # remove all-files from bastion-host 
# rm -f /var/www/html/openshift/*.ign                                   # remove all-files from bastion-host 
# systemctl stop httpd && systemctl start httpd && systemctl status httpd # restart httpd 
# rm -rf /opt/sva/openshift473/install-config/*                            # empty folder from bastion-host  
# rm -f /opt/sva/openshift473/install-config.yaml                          # remove install-config.yaml on bastion-host 
# cd /opt/sva/terraform && ././cleanup-openshift-nodes473.sh                 # install-vM: terraform destroy nodes 

# Prepare install-config.yaml
- import_playbook: "../01-install-and-configure-bastion-host-vm/03-prepare-openshift-install-config.yaml"

# Start openshift-installation bootstrap -> master-/worker-nodes
- import_playbook: "../04-start-openshift-installation/01-openshift-in-one-tf-file.yaml"

# Wait for Bootstrap to complete
- import_playbook: "../04-start-openshift-installation/02-wait-for-bootstrap-complete.yaml"

# Sign Certificate Signing Requests
- import_playbook: "../04-start-openshift-installation/03-sign-certificate-requests.yaml"

# Wait for Install to complete
- import_playbook: "../04-start-openshift-installation/04-wait-for-install-complete.yaml"