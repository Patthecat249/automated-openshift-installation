# This playbook must be run on install-vm node 
---
# This Playbook implements the CSI-Driver-Operator and configures it to Point to SPS-Storage-Cluster

# 
# - name: "### --- 01 - Copy TAR-File from Install to Bastion-Host"
#   copy:
#     src: "{{dir_spectrumscale}}{{cnsa_install_file}}"
#     dest: "{{dir_spectrumscale}}{{cnsa_install_file}}"

# Ensure the following pre-installation tasks on the CNSA cluster are completed.
# Label Worker-Nodes
- name: "### --- 01 - Label Worker-Nodes"
  raw: "oc --kubeconfig={{kubeconfig}} label nodes -l node-role.kubernetes.io/worker= scale=true --overwrite"


# Create a CNSA GUI user for CSI
# Wird bereits im vorhergehende Playbook angelegt
# - name: "### --- 02 - Create a CNSA GUI user for CSI"
#   raw: "oc --kubeconfig={{kubeconfig}} exec -c liberty ibm-spectrum-scale-gui-0 -- /usr/lpp/mmfs/gui/cli/mkuser {{user_csi_admin}} -p {{pass_csi_admin}} -g CsiAdmin"


# Identify node mapping:
- name: "### --- 03 - Identify node mapping"
  raw: "oc --kubeconfig={{kubeconfig}} -n {{namespace_cnsa}} exec $(oc --kubeconfig={{kubeconfig}} get pods -n {{namespace_cnsa}} | grep -i -m1 \"ibm-spectrum-scale-core-\" | awk '{print $1}') -- curl -k https://ibm-spectrum-scale-gui.ibm-spectrum-scale-ns/scalemgmt/v2/filesystems/fs1?fields=mount -u \"{{user_csi_admin}}:{{pass_csi_admin}}\""


# Retrieve and note down the CNSA cluster ID:
- name: "### --- 04 - Retrieve and note down the CNSA cluster ID"
  raw: "oc --kubeconfig={{kubeconfig}} -n {{namespace_cnsa}} exec $(oc --kubeconfig={{kubeconfig}} get pods -n {{namespace_cnsa}} | grep -i -m1 \"ibm-spectrum-scale-core-\" | awk '{print $1}') -- curl -s -k https://ibm-spectrum-scale-gui.ibm-spectrum-scale-ns/scalemgmt/v2/cluster -u \"{{user_csi_admin}}:{{pass_csi_admin}}\" | grep clusterId | grep -oP \"[0-9]*\""
  register: result_cnsa_cluster_id
  tags:
    - nodemapping


- debug: 
    var: result_cnsa_cluster_id.stdout_lines
    #verbosity: 2
  tags:
    - nodemapping

# Retrieve and note down the Storage cluster ID:
- name: "### --- 05 - Retrieve and note down the Storage cluster ID"
  raw: "curl -s -k https://{{sps.sps3.ip}}/scalemgmt/v2/cluster -u \"{{user_csi_admin}}:{{pass_csi_admin}}\" | grep clusterId | grep -oP \"[0-9]*\""
  register: result_storage_cluster_id
  tags:
    - nodemapping

- debug: 
    var: result_storage_cluster_id.stdout_lines
    #verbosity: 2
  tags:
    - nodemapping

# Initgui
- name: "### --- 06 - Initialize the IBM Spectrum Scale CNSA GUI"
  raw: "oc exec --kubeconfig={{kubeconfig}} $(oc --kubeconfig={{kubeconfig}} get pods -lapp=scale-gui -ojsonpath=\"{.items[0].metadata.name}\" -n {{namespace_cnsa}}) liberty -n {{namespace_cnsa}} -- /usr/lpp/mmfs/gui/cli/initgui"


# Create Namespace for CSI-Driver
- name: "### --- 07 - Create Namespace for CSI-Driver"
  raw: "oc  --kubeconfig={{kubeconfig}} new-project {{namespace_csi_driver}}"

# Create secret for the CNSA-Cluster
- name: "### --- xx - Create Secret for GUI-User of ISS-Storage-Cluster"
  raw: "oc create secret generic {{secret_name_cnsa_cluster}} --from-literal=username='{{cnsa_gui_user}}' --from-literal=password='{{cnsa_gui_pass}}' -n {{namespace_csi_driver}} --kubeconfig={{kubeconfig}}"

# Create secret for the Storage-Cluster
- name: "### --- xx - Create Secret for GUI-User of ISS-Storage-Cluster"
  raw: "oc create secret generic {{secret_name_storage_cluster}} --from-literal=username='{{storage_gui_user}}' --from-literal=password='{{storage_gui_pass}}' -n {{namespace_csi_driver}} --kubeconfig={{kubeconfig}}"


# Create template for CSI-Driver-Operator
- name: "### --- 08 - Create template for CSI-Driver-Operator"
  template:
    src: "../99-jinja-templates/spectrumscale/csi-driver-operator.j2"
    dest: "{{dir_spectrumscale}}csi-driver-operator.yaml"

# Create the CSI-Driver-Operator in OpenShift
- name: "### --- 09 - Create CSI-Driver-Operator"
  raw: "oc --kubeconfig={{kubeconfig}} create -f {{dir_spectrumscale}}csi-driver-operator.yaml"

# Create template for CSI-Driver-Operator-Instanz
- name: "### --- 10 - Create template for CSI-Driver-Operator-Instanz"
  template:
    src: "../99-jinja-templates/spectrumscale/csi-scale-operator-instanz.j2"
    dest: "{{dir_spectrumscale}}csi-scale-operator-instanz.yaml"
