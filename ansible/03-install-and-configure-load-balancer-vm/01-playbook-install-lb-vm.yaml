- name: "Playbook - Install a Load-Balancer-VM"
  become: "true"
  become_user: "root"
  hosts: 127.0.0.1
  gather_facts: "false"
  vars_files:
    - "../vars/vars.yaml"
  vars:
    - cpu: "{{ lb.cpu }}"
    - ram: "{{ lb.ram }}"
    - hostname: "{{ lb.hostname }}"
    - ip: "{{ lb.ip }}"
    - kickstart_file: "{{ lb.hostname }}.cfg"
 
  tasks:
# Erstelle Arbeitsverzeichnisse
    - name: "111 --- Create Working-Directories"
      file:
        path: "{{ item }}"
        state: "directory"
        recurse: "true"
      with_items:
        - "{{ dir_root }}"
        - "{{ dir_terraform }}{{ lb.hostname }}"
    
# Erstelle die Terraform-Files "main.tf/output.tf"-files
# main.tf
    - name: "112 --- Create main.tf-file"
      template:
        src: "../99-jinja-templates/terraform/new-vm-from-clone-with-network-settings-tf.j2"
        dest: "{{ dir_terraform }}{{ lb.hostname }}/main.tf"
    
# Erzeuge und kopiere das output.tf-file in den VM-Instanz-Ordner
    - name: "113 --- Create output.tf-file"
      template:
        src: "../99-jinja-templates/terraform/new-vm-from-clone-with-network-settings-output-tf.j2"
        dest: "{{ dir_terraform }}{{ lb.hostname }}/output.tf"
    
# Erzeuge die virtuelle Maschine
    - name: "114 --- Create virtual machine with terraform"
      raw: "cd {{ dir_terraform }}{{ lb.hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"

# Ermittle die MAC-Adresse, der erzeugten VM
    - name: "115 --- Retrieve mac-address from created virtual machine"
      raw: "cd {{ dir_terraform }}{{ lb.hostname }} && terraform output -json | jq '.[\"mac-address\"].value' | sed -e 's|\"||g'"
      register: mac

# Erzeuge anhand der Mac-Adresse, IP-Adresse und des Hostnames, einen DHCP-Eintrag in DNSMASQ
    - name: "116 --- Add DHCP-entry to dnsmasq.conf"
      become: "true"
      become_user: "root"
      lineinfile:
        path: /etc/dnsmasq.conf
        insertafter: "^## OpenShift-Nodes-DHCP"         
        line: "dhcp-host={{ mac.stdout | trim }},{{ lb.hostname }},{{ lb.ip }},set:openshift_node"
      delegate_to: "{{bastion.ip}}"
      notify: "restart dnsmasq"

# Erzeuge anhand der Mac-Adresse, IP-Adresse und des Hostnames, einen DNS-Lookup-Eintrag in DNSMASQ
    - name: "117 --- Add DNS-Lookup-entry to dnsmasq.conf"
      become: "true"
      become_user: "root"
      lineinfile:
        path: "/etc/dnsmasq.conf"
        insertafter: "^## OpenShift-Nodes-DNS" 
        line: "address=/{{ lb.hostname }}.{{clustername}}.{{domain}}/{{ lb.ip }}"
      delegate_to: "{{bastion.ip}}"
      notify: "restart dnsmasq"

# Starte den DNS-Dienst erneut, wenn sich etwas an der DNS-Konfiguration ge√§ndert hat.
  handlers:
    - name: "restart dnsmasq"
      become: "true"
      become_user: "root"
      service:
        name: dnsmasq
        state: restarted
      delegate_to: "{{bastion.ip}}"