---
- name: "Configuration of a load-balancer"
  hosts: "{{ lb.hostname }}"
  become: "true"
  gather_facts: "false"
  vars_files:
    - "../vars/vars.yaml"
  tasks:
    - name: "00 - ssh-copy-id as user-root to {{lb.hostname}}"
      become: "true"
      become_user: "root"
      raw: "ssh-copy-id -o StrictHostKeyChecking=no root@{{lb.hostname}}"
      delegate_to: "localhost"

    - name: "01 - Install haproxy-software and policycoreutils-python"
      yum:
        name: 
          - "haproxy"
          - "policycoreutils-python"
          - "chrony.x86_64"
        state: "present"

    - name: "02 - Render haproxy-template for load-balancer-vm"
      template:
        src: "../99-jinja-templates/haproxy/haproxy.cfg.j2"
        dest: "/etc/haproxy/haproxy.cfg"
        owner: "root"
        group: "root"
        mode: "0644"
        force: "true"
        validate: "/usr/sbin/haproxy -f %s -c -q"
      notify:
        - restart haproxy

    - name: "03 - SELinux - Check Status"
      command: "/usr/sbin/getenforce"
      register: "getenforce_res"

    - name: "04 - Configure SELinux with enforcing mode"
      seport:
        ports: "6443,22623"
        proto: "tcp"
        setype: "commplex_main_port_t"
        state: "present"
      when: getenforce_res.stdout == 'Enforcing'

    - name: "05 - Start and enable service haproxy"
      systemd:
        name: "haproxy"
        state: "started"
        enabled: "true"

  handlers:
    - name: "restart haproxy"
      systemd:
        name: "haproxy"
        state: "restarted"
...