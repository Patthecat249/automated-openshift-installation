# Execute on install-vm

- name: "Install {{ bstrp.name }}-VM"
  become: "true"
  become_user: "root"
  hosts: 127.0.0.1
  gather_facts: "false"
  vars_files:
    - "../vars/vars.yaml"
  vars:
    # - cpu: "{{ bstrp.cpu }}"
    # - ram: "{{ bstrp.ram }}"
    # - hostname: "{{ bstrp.hostname }}"
    # - ip: "{{ bstrp.ip }}"
    # - ignition_file: "{{ignition_filename_bootstrap}}"
 
  tasks:
# Erstelle Arbeitsverzeichnisse
    - name: "01 --- Create Working-Directories"
      file:
        path: "{{ item }}"
        state: "directory"
        recurse: "true"
      with_items:
        - "{{ dir_terraform }}{{ bstrp.hostname }}"
        - "{{ dir_terraform }}{{ masters[0].hostname }}"
        - "{{ dir_terraform }}{{ masters[1].hostname }}"
        - "{{ dir_terraform }}{{ masters[2].hostname }}"
        - "{{ dir_terraform }}{{ workers[0].hostname }}"
        - "{{ dir_terraform }}{{ workers[1].hostname }}"
        - "{{ dir_terraform }}{{ workers[2].hostname }}"

# Create tf-files
# Erstelle VM-Instanz Terraform "main.tf"-file
# main.tf
# Masters
    - name: "02a --- Create main.tf - {{ masters[0].hostname }}"
      vars:
        - cpu: "{{ masters[0].cpu }}"
        - ram: "{{ masters[0].ram }}"
        - hostname: "{{ masters[0].hostname }}"
        - ip: "{{ masters[0].ip }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

    - name: "02b --- Create main.tf - {{ masters[1].hostname }}"
      vars:
        - cpu: "{{ masters[1].cpu }}"
        - ram: "{{ masters[1].ram }}"
        - hostname: "{{ masters[1].hostname }}"
        - ip: "{{ masters[1].ip }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

    - name: "02c --- Create main.tf - {{ masters[2].hostname }}"
      vars:
        - cpu: "{{ masters[2].cpu }}"
        - ram: "{{ masters[2].ram }}"
        - hostname: "{{ masters[2].hostname }}"
        - ip: "{{ masters[2].ip }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

# Workers
    - name: "02a --- Create main.tf - {{ workers[0].hostname }}"
      vars:
        - cpu: "{{ workers[0].cpu }}"
        - ram: "{{ workers[0].ram }}"
        - hostname: "{{ workers[0].hostname }}"
        - ip: "{{ workers[0].ip }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

    - name: "02b --- Create main.tf - {{ workers[1].hostname }}"
      vars:
        - cpu: "{{ workers[1].cpu }}"
        - ram: "{{ workers[1].ram }}"
        - hostname: "{{ workers[1].hostname }}"
        - ip: "{{ workers[1].ip }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

    - name: "02c --- Create main.tf - {{ workers[2].hostname }}"
      vars:
        - cpu: "{{ workers[2].cpu }}"
        - ram: "{{ workers[2].ram }}"
        - hostname: "{{ workers[2].hostname }}"
        - ip: "{{ workers[2].ip }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

# # output.tf
#     - name: "03 --- Create output.tf"
#       template:
#         src: "../99-jinja-templates/terraform/output.j2"
#         dest: "{{ dir_terraform }}{{ masters[0].hostname }}/output.tf"

# # vars.tf
#     - name: "04 --- Create vars.tf"
#       template:
#         src: "../99-jinja-templates/terraform/vars-coreos-tf.j2"
#         dest: "{{ dir_terraform }}{{ masters[0].hostname }}/vars.tf"


# Execute terrform


# insert DHCP-entries


# create PXE-files


# insert DNS-entries


