# Execute on install-vm

- name: "Install {{ bstrp.name }}-VM"
  become: "true"
  become_user: "root"
  hosts: 127.0.0.1
  gather_facts: "false"
  vars_files:
    - "../vars/vars.yaml"
  vars:
    # - cpu: "{{ bstrp.cpu }}"
    # - ram: "{{ bstrp.ram }}"
    # - hostname: "{{ bstrp.hostname }}"
    # - ip: "{{ bstrp.ip }}"
    # - ignition_file: "{{ignition_filename_bootstrap}}"
 
  tasks:
# Erstelle Arbeitsverzeichnisse
    - name: "01 --- Create Working-Directories"
      file:
        path: "{{ item }}"
        state: "directory"
        recurse: "true"
      with_items:
        - "{{ dir_terraform }}{{ bstrp.hostname }}"
        - "{{ dir_terraform }}{{ masters[0].hostname }}"
        - "{{ dir_terraform }}{{ masters[1].hostname }}"
        - "{{ dir_terraform }}{{ masters[2].hostname }}"
        - "{{ dir_terraform }}{{ workers[0].hostname }}"
        - "{{ dir_terraform }}{{ workers[1].hostname }}"
        - "{{ dir_terraform }}{{ workers[2].hostname }}"

# Create tf-files
# Erstelle VM-Instanz Terraform "main.tf"-file
# main.tf
# Masters / Workers
    - name: "02a --- Create main.tf"
      vars:
        - cpu: "{{ item.cpu }}"
        - ram: "{{ item.ram }}"
        - hostname: "{{ item.hostname }}"
        - ip: "{{ item.ip }}"
        - disk: "{{ item.disk }}"
      template:
        src: "../99-jinja-templates/terraform/ocp-master-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"
      with_items: 
        - "{{ masters }}"
        - "{{ workers }}"
        - "{{ bstrp }}"

# output.tf
# Masters / Workers
    - name: "03a --- Create output.tf"
      vars:
        - cpu: "{{ item.cpu }}"
        - ram: "{{ item.ram }}"
        - hostname: "{{ item.hostname }}"
        - ip: "{{ item.ip }}"
        - disk: "{{ item.disk }}"
      template:
        src: "../99-jinja-templates/terraform/output.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/output.tf"
      with_items: 
        - "{{ masters }}"
        - "{{ workers }}"
        - "{{ bstrp }}"

# vars.tf
    - name: "04a --- Create vars.tf"
      vars:
        - cpu: "{{ item.cpu }}"
        - ram: "{{ item.ram }}"
        - hostname: "{{ item.hostname }}"
        - ip: "{{ item.ip }}"
        - disk: "{{ item.disk }}"
      template:
        src: "../99-jinja-templates/terraform/vars-coreos-tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/vars.tf"
      with_items: 
        - "{{ masters }}"
        - "{{ workers }}"
        - "{{ bstrp }}"


# # Execute terraform
# # Erzeuge die virtuelle Maschine
    - name: "05 --- Terraform - Create virtual machine"
      vars:
        - cpu: "{{ item.cpu }}"
        - ram: "{{ item.ram }}"
        - hostname: "{{ item.hostname }}"
        - ip: "{{ item.ip }}"
        - disk: "{{ item.disk }}"
      raw: "cd {{ dir_terraform }}{{ hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"      
      with_items: 
        - "{{ masters }}"
        - "{{ workers }}"
        - "{{ bstrp }}"

#     - name: "05a --- Terraform - Create virtual machine {{ bstrp.hostname }}"
#       raw: "cd {{ dir_terraform }}{{ bstrp.hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"
#     - name: "05b --- Terraform - Create virtual-machine {{ masters[0].hostname }}"
#       raw: "cd {{ dir_terraform }}{{ masters[0].hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"
#     - name: "05c --- Terraform - Create virtual-machine {{ masters[1].hostname }}"
#       raw: "cd {{ dir_terraform }}{{ masters[1].hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"
#     - name: "05d --- Terraform - Create virtual-machine {{ masters[2].hostname }}"
#       raw: "cd {{ dir_terraform }}{{ masters[2].hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"
#     - name: "05e --- Terraform - Create virtual-machine {{ workers[0].hostname }}"
#       raw: "cd {{ dir_terraform }}{{ workers[0].hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"
#     - name: "05f --- Terraform - Create virtual-machine {{ workers[1].hostname }}"
#       raw: "cd {{ dir_terraform }}{{ workers[1].hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"
#     - name: "05g --- Terraform - Create virtual-machine {{ workers[2].hostname }}"
#       raw: "cd {{ dir_terraform }}{{ workers[2].hostname }} && /usr/local/bin/terraform init && /usr/local/bin/terraform apply -auto-approve"


# insert DHCP-entries


# create PXE-files


# insert DNS-entries


