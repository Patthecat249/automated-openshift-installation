- name: "Install-VM"
  hosts: 127.0.0.1
  gather_facts: "false"
  vars:
    hostname: "default-template"
    dir_tftproot: "/tftproot/pxelinux.cfg/"
    vm_type: "worker"
    ip: "10.0.249.111"
    cpu: "1"
    ram: "1024"
    disksize: "120"
    boot_delay: "60000"
    dir_root: "/opt/sva/"
    dir_terraform: "{{dir_root}}terraform/"
  tasks:
    - name: "00 --- Create Working-Directories"
      file:
        path: "{{ item }}"
        state: "directory"
        recurse: "true"
      with_items:
        - "{{ dir_root }}"
        - "{{ dir_terraform }}"

    - name: "01 --- Create main.tf-file from main.tf.j2"
      template:
        src: "main.tf.j2"
        dest: "{{ dir_terraform }}{{ hostname }}/main.tf"

    - name: "02 --- Create virtual machine with terraform"
      raw: "terraform init && terraform apply -auto-approve"

    - name: "03 --- Retrieve mac-address from created virtual machine"
      raw: "terraform output -json | jq '.[\"mac-address\"].value' | sed -e 's|\"||g'"
      register: mac

    - name: "04 --- Create pxelinux-config-file with mac-address-filename on tftproot on pxe-server"
      become: "true"
      become_user: "root"
      template:
        src: "./pxelinux-template.j2"
        dest: "{{dir_tftproot}}01-{{ mac.stdout | trim | regex_replace(':', '-')}}"
        mode: "0755"
        owner: "dnsmasq"
        group: "wheel"
      delegate_to: pxe-server


    - name: "05 --- Add entry to dnsmasq.conf"
      become: "true"
      become_user: "root"
      lineinfile:
        path: /etc/dnsmasq.conf
        insertafter: "^# OpenShift-Nodes"         
        line: "dhcp-host={{ mac.stdout | trim }},{{hostname}},{{ ip }},set:ocp43"
      delegate_to: pi
      notify: "restart dnsmasq"


    - name: "06 --- Add entry to dnsmasq.conf"
      become: "true"
      become_user: "root"
      lineinfile:
        path: "/etc/dnsmasq.conf"
        insertafter: "^# Static-DNS-Assignements" 
        line: "address=/{{hostname}}.ocp43-patrick.home.local/{{ ip }}"
      delegate_to: pi
      notify: "restart dnsmasq"

  handlers:
    - name: "restart dnsmasq"
      become: "true"
      become_user: "root"
      service:
        name: dnsmasq
        state: restarted
      delegate_to: pi
